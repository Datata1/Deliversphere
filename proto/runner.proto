syntax = "proto3";

package runner;

// Der zentrale Dienst, der auf dem Server läuft
service RunnerService {
  // Eine Streaming-Verbindung, über die Agent und Server kommunizieren
  rpc Communicate (stream AgentRequest) returns (stream ServerCommand);
}

// Nachrichten, die vom Agenten zum Server gesendet werden
message AgentRequest {
  oneof payload {
    RegisterAgent register = 1;
    LogMessage log = 2;
    JobResult result = 3;
  }
}

// Nachrichten, die vom Server zum Agenten gesendet werden
message ServerCommand {
  oneof payload {
    RunJob job = 1;
    CancelJob cancel = 2;
  }
}

// --- Detail-Nachrichten ---
message RegisterAgent {
  string agent_id = 1;
  string hostname = 2;
}

message LogMessage {
  string job_id = 1;
  uint64 timestamp = 2;
  string output = 3;
}

message JobResult {
  string job_id = 1;
  bool success = 2;
}

message RunJob {
  string job_id = 1;
  string repository_url = 2;
  repeated string commands = 3;
}

message CancelJob {
  string job_id = 1;
}